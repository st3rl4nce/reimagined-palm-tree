Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ID ASSIGN expression SEMICOLON
Rule 2     statement -> ID SEMICOLON
Rule 3     expression -> INT
Rule 4     expression -> FLOAT
Rule 5     expression -> DOUBLE
Rule 6     expression -> CHAR
Rule 7     expression -> ID

Terminals, with rules where they appear

ASSIGN               : 1
CHAR                 : 6
DOUBLE               : 5
FLOAT                : 4
ID                   : 1 2 7
INT                  : 3
SEMICOLON            : 1 2
error                : 

Nonterminals, with rules where they appear

expression           : 1
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ID ASSIGN expression SEMICOLON
    (2) statement -> . ID SEMICOLON

    ID              shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ID . ASSIGN expression SEMICOLON
    (2) statement -> ID . SEMICOLON

    ASSIGN          shift and go to state 3
    SEMICOLON       shift and go to state 4


state 3

    (1) statement -> ID ASSIGN . expression SEMICOLON
    (3) expression -> . INT
    (4) expression -> . FLOAT
    (5) expression -> . DOUBLE
    (6) expression -> . CHAR
    (7) expression -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    DOUBLE          shift and go to state 9
    CHAR            shift and go to state 10
    ID              shift and go to state 5

    expression                     shift and go to state 6

state 4

    (2) statement -> ID SEMICOLON .

    $end            reduce using rule 2 (statement -> ID SEMICOLON .)


state 5

    (7) expression -> ID .

    SEMICOLON       reduce using rule 7 (expression -> ID .)


state 6

    (1) statement -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 11


state 7

    (3) expression -> INT .

    SEMICOLON       reduce using rule 3 (expression -> INT .)


state 8

    (4) expression -> FLOAT .

    SEMICOLON       reduce using rule 4 (expression -> FLOAT .)


state 9

    (5) expression -> DOUBLE .

    SEMICOLON       reduce using rule 5 (expression -> DOUBLE .)


state 10

    (6) expression -> CHAR .

    SEMICOLON       reduce using rule 6 (expression -> CHAR .)


state 11

    (1) statement -> ID ASSIGN expression SEMICOLON .

    $end            reduce using rule 1 (statement -> ID ASSIGN expression SEMICOLON .)

